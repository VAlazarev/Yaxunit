#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	//ЮТТесты.ДобавитьТестовыйНабор("Тестирование документов ""Приход,Расход""").ВТранзакции()
	//.ДобавитьТест("СозданиеДокументов", "", "Позитив")
	//;  
	
	ЮТТесты.ДобавитьТестовыйНабор("Тестирование документов ""Приход,Расход""").ВТранзакции()
	.ДобавитьТест("СозданиеДокументов", "", "Позитив")
	;

	
	
КонецПроцедуры

Процедура СозданиеДокументов() Экспорт
	
	
	// 1. Подготовка параметров и генерация данных для выполнения функции.
	
	Товар = ЮТест.Данные().КонструкторОбъекта("Справочник.Товары")
	.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля
	.Установить("Наименование", "Тестовый товар")
	.Установить("Код", "Т0001")
	.Записать();
	
	Склад = ЮТест.Данные().КонструкторОбъекта("Справочник.Склады")
	.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля
	.Установить("Наименование", "Тестовый склад")
	.Установить("Код", "Т0001")
	.Записать();
	
	
	
	
	// 2. Форруем Документы 
	
	
	ДокументПоступления1 =СоздатьПоступление(Склад,Товар);
	ДокументПоступления2 =СоздатьПоступление(Склад,Товар); 
	ДокументПоступления3 =СоздатьПоступление(Склад,Товар);
	
	ДокументРеализации1 =СоздатьРеализацию(Склад,Товар); 
	ДокументРеализации2 =СоздатьРеализацию(Склад,Товар);
	ДокументРеализации3 =СоздатьРеализацию(Склад,Товар);
	
	
	
	
	
	
	// 3. Проверяем   Проведение
	ПроверитьДокумент(ДокументПоступления1,"ДокументСсылка.ПриходТовара"); 
	ПроверитьДокумент(ДокументПоступления2,"ДокументСсылка.ПриходТовара");
	ПроверитьДокумент(ДокументПоступления2,"ДокументСсылка.ПриходТовара"); 
	
	ПроверитьДокумент(ДокументРеализации1,"ДокументСсылка.РасходТовара"); 
	ПроверитьДокумент(ДокументРеализации2,"ДокументСсылка.РасходТовара");
	ПроверитьДокумент(ДокументРеализации3,"ДокументСсылка.РасходТовара");
	
	
	// 4. Проверяем остатки
	ПроверитьОстатки(Склад,Товар);
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

Функция СоздатьПоступление(Склад,Номенклатура)
	
	Возврат ЮТест.Данные().КонструкторОбъекта("Документ.ПриходТовара")
	.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля   
	.Установить("Склад",Склад)
	.ТабличнаяЧасть("Товары")
	.ДобавитьСтроку()               
	.Установить("Товар", Номенклатура)
	.Фикция("Цена")  
	.Установить("Количество",1)              
	.Фикция("Сумма")
	.Провести(Ложь);
	
	
КонецФункции   

Функция СоздатьРеализацию(Склад,Номенклатура)
	
	Возврат ЮТест.Данные().КонструкторОбъекта("Документ.РасходТовара")
	.ФикцияОбязательныхПолей() // Автоматически заполняем обязательные поля   
	.Установить("Склад",Склад)
	.ТабличнаяЧасть("Товары")
	.ДобавитьСтроку()               
	.Установить("Товар", Номенклатура)
	.Фикция("Цена")  
	.Установить("Количество",1)      
	.Фикция("Сумма")
	.Провести(Ложь);
	
	
КонецФункции  

Процедура ПроверитьДокумент(Документ,ТипДокумента)
	
	Движения = ЮТЗапросы.ДвиженияДокумента(Документ, "ТоварныеЗапасы");
	
	ЮТест.ОжидаетЧто(Движения)
	.Заполнено() ; 
	
	ЮТест.ОжидаетЧто(Документ.ССылка)
	.Заполнено()
	.ИмеетТип(ТипДокумента)
	.Свойство("Проведен").ЭтоИстина();
	
КонецПроцедуры   

Процедура ПроверитьОстатки(Склад,Товар) 
	
	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварныеЗапасыОстатки.Товар КАК Товар,
	|	ТоварныеЗапасыОстатки.Склад КАК Склад,
	|	ТоварныеЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварныеЗапасы.Остатки(
	|			,
	|			Склад = &Склад
	|				И Товар = &Товар) КАК ТоварныеЗапасыОстатки";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Товар", Товар);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	ЮТест.ОжидаетЧто(ВыборкаДетальныеЗаписи)
	.ИмеетДлину(0)
	
	
	
	
	
	
КонецПроцедуры



#КонецОбласти